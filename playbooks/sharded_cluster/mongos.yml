---
- hosts: mongos
  gather_facts: yes
  vars:
    shards:
      - "rs0/mongodb1.local:27018"
      - "rs1/mongodb4.local:27018"
    config_servers: "mongos1.local:27019, mongos2.local:27019, mongos3.local:27019"
  vars_files:
    - ./vault.yml
  roles:
    - role: "community.mongodb.mongodb_linux"
    - role: "community.mongodb.mongodb_selinux"
    - role: "community.mongodb.mongodb_repository"
      mongodb_version: "4.2"
    - role: "community.mongodb.mongodb_mongos"
    - role: "community.mongodb.mongodb_config"

  tasks:

    - name: Ensure python3 is available
      package:
        name: python3

    - name: Ensure pymongo is installed
      pip:
        name: pymongo
        state: present

    - name: Ensure mongo shell is installed
      package:
        name: mongodb-org-shell
        state: present

    - name: Initialise config server replica_set
      community.mongodb.mongodb_replicaset:
        login_database: "admin"
        login_host: localhost
        login_port: 27019
        replica_set: "cfg"
        members:
          - mongos1.local:27019
          - mongos2.local:27019
          - mongos3.local:27019
      register: create_rs
      when: ansible_hostname == "mongos1"

    - name: Has MongoDB Admin User been created already?
      stat:
        path: /root/mongodb_admin.success
      register: mongodb_admin

    - name: Add MongoDB Admin User using localhost exception
      community.mongodb.mongodb_user:
        name: "{{ admin_user }}"
        password: "{{ admin_user_password }}"
        database: admin
        roles:
          - "root"
      when:
        - ansible_hostname == "mongos1"
        - mongodb_admin.stat.exists == False

    - shell: "mongo admin --username {{ admin_user }} --password {{ admin_user_password }} --eval 'db.runCommand({listDatabases: 1})' && touch /root/mongodb_admin.success"
      args:
        creates: /root/mongodb_admin.success
      when: mongodb_admin.stat.exists == False
      ignore_errors: yes

    - name: Add shards
      community.mongodb.mongodb_shard:
        login_user: "{{ admin_user }}"
        login_password: "{{ admin_user_password }}"
        shard: "{{ item }}"
        state: present
      when: ansible_hostname == "mongos1"
      with_items: "{{ shards }}"

    - name: Add MongoDB App Users on the Cluster
      community.mongodb.mongodb_user:
        login_user: "{{ admin_user }}"
        login_password: "{{ admin_user_password }}"
        login_database: admin
        user: "{{ item.username }}"
        password: "{{ item.password }}"
        database: "{{ item.database }}"
        roles: "{{ item.roles }}"
        update_password: "on_create"
      with_items:
        - "{{ app_users }}"
      no_log: yes
      when: ansible_hostname == "mongos1"
